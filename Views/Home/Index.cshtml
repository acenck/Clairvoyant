
@using Clairvoyant.Models

@model List<Contact>

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Clairvoyant</h1>
    <p>This is the foundation page for our new Liftoff app.</p>

    
</div>

<!--TO DO: display current user initials in centered circle with displayed name beneath-->
<body>

    <div class="text-center display-2">
        <h1>NA</h1>
        <h3>Username</h3>
    </div>

    <!--TO DO: add search functionality-->
    <form>

        <div class="d-flex">
            <input type="button" class="btn btn-primary" value="+" onclick="location.href= '@(Url.Action("Add", "Contacts"))'">
            <label for="exampleInputContact"></label>
            <input class="form-control" type="text" id="Contact" aria-describedby="Contact" placeholder="Search">
            <button type="submit" class="btn btn-primary">></button>

        </div>
   
    

    </form>

</body>

    <!--TO DO: sort contacts by last name-->
    @if(Model.Count == 0)
    {
        <div class="container text-center">
            <p>No Contact library empty</p>
        </div>
    }
    else
    {
      <div class="container">
          <table class="table table-hover">

              @foreach (var contact in Model)
              {
              
                  <tr onclick="location.href = '@(Url.Action("Detail", "Contact", new { contactId = contact.Id }))'">
                      <td>@contact.FirstName</td>
                      <td>@contact.LastName</td>
                  </tr>
                  
              }
              
          </table>
      </div>









}